{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.interceptor.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/auth.service.ts","./src/app/services/file.service.ts","./src/app/services/transaction.service.ts","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch:'full' },\n  { path: 'home', component: HomeComponent },\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'registration', component: RegistrationComponent },\n      { path: 'login', component: LoginComponent }\n    ]\n  },\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { AuthService } from './services/auth.service';\nimport { User } from './models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Transactions';\n  constructor(private spinner: NgxSpinnerService, private router: Router) {}\n \n  ngOnInit() {\n    this.spinner.show();\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 500);\n  }\n  \n  // Method for loging out\n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/user/login']);\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand text-white\" routerLink=\"/home\">Transactions</a>\r\n    <button class=\"btn btn-success\" style=\"margin-left:1200px\" routerLink=\"user/login\">Login</button>\r\n    <button class=\"btn btn-danger\" (click)=\"onLogout()\">Logout</button>\r\n</nav>\r\n<ngx-spinner></ngx-spinner>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { TransactionService } from './services/transaction.service';\nimport { AuthService } from './services/auth.service';\nimport { FileService } from './services/file.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserComponent,\n    LoginComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    NgxPaginationModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    TransactionService, \n    AuthService,\n    FileService,{\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n}) \nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) {\r\n    }\r\n\r\n    // Method for adding JSON Web Token to requests\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') != null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status == 401){\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/user/login');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n}","import { TransactionService} from '../services/transaction.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Transaction } from '../models/transaction';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '../models/user';\nimport { FileService } from '../services/file.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  transactions: Transaction[];\n  totalItems: number;\n  previousTransactions: Transaction[];\n  pageNumber: number = 1;\n  types: string[];\n  statuses: string[];\n  user: User;\n  type: string = '';\n  status: string = '';\n  statusToEdit: string;\n  transactionToEdit: number;\n  loaded: boolean;\n\n  config: any;\n\n  constructor(private transactionService: TransactionService,\n              private toastr: ToastrService,\n              private authService: AuthService,\n              private fileService: FileService) {\n              }\n\n  // Method for loading data on page loads\n  ngOnInit(): void {\n    this.loadTransactions();\n    this.loadStatuses();\n    this.loadTypes();\n    this.getUserProfile();\n    this.config = {\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: this.totalItems\n    };\n    console.log(this.config);\n  }\n  \n  // Method for loading transaction types\n  loadTypes(){\n    this.transactionService.getTypes().subscribe((data: string[]) => {\n      this.types = data;\n    });\n  }\n\n  // Method for loading transaction statuses\n  loadStatuses(){\n    this.transactionService.getStatuses().subscribe((data: string[]) => {\n      this.statuses = data;\n    });\n  }\n\n  // Method for deleting transaction\n  deleteTransaction(id){\n    var result = confirm(\"Are you sure that you want to delete this transaction?\");\n    if(result == true){\n      this.transactionService.deleteTransaction(id).subscribe(data => {\n        this.toastr.success('Transaction was deleted.','Succesfully.');\n        this.loadTransactions();\n      })\n    }\n  }\n  \n  // Method for getting users profile\n  getUserProfile(){\n    this.authService.getUserProfile().subscribe((data: User) => {\n      this.user = data;\n    })\n  }\n\n  // Method for setting type for transaction filter\n  setType(type: string){\n    this.type = type;\n    document.getElementById('setType').innerHTML = type;\n    this.loadTransactions();\n  }\n\n  // Method for setting status for transaction filter\n  setStatus(status: string){\n    this.status = status;\n    document.getElementById('setStatus').innerHTML = status;\n    this.loadTransactions();\n  }\n\n  // Method for setting new status of transaction\n  setStatusForChanging(status: string){\n    this.statusToEdit = status;\n    document.getElementById('statusToEdit').innerHTML = status;\n  }\n\n  // Method for changing transaction status\n  changeStatus(){\n    if(!this.statusToEdit){\n      this.toastr.error('You need to set new status.','Error.');\n    }\n    else{\n      let transaction = {\n        transactionId: this.transactionToEdit,\n        status: this.statusToEdit\n      };\n      this.transactionService.editTransaction(transaction).subscribe(data => {\n        this.toastr.success('Transactions status was changed.','Success!');\n        this.transactionToEdit = null;\n        this.loadTransactions();\n        document.getElementById('statusToEdit').innerHTML = \"Status\";\n      }),\n      err => {\n        console.log(err);\n      }\n    }\n  }\n\n  // Method for indicating which transactions status must be changed\n  transactionToChange(transactionId: number){\n    this.transactionToEdit = transactionId;\n  } \n\n  // Method for loading transactions\n  loadTransactions(){\n    this.transactionService.getTransactions(this.type, this.status, this.pageNumber).\n      subscribe((data: Transaction[]) => {\n        this.transactions = data[\"data\"];\n        this.totalItems = data[\"totalItems\"];\n        this.config = {\n          itemsPerPage: 10,\n          currentPage: this.pageNumber,\n          totalItems: this.totalItems\n        };\n        this.loaded = true;\n      });\n  }\n\n  // Method for exporting transactions in xlsx file\n  exportTransactions(){\n    let transactionId = (document.getElementById('transactionId') as HTMLInputElement).checked;\n    let status = (document.getElementById('status') as HTMLInputElement).checked;\n    let type = (document.getElementById('type') as HTMLInputElement).checked;\n    let clientName = (document.getElementById('clientName') as HTMLInputElement).checked;\n    let amount = (document.getElementById('amount') as HTMLInputElement).checked;\n    if(!transactionId && !status && !type && !clientName && !amount){\n      this.toastr.error('You need to choose at least 1 item.','Error.');\n    }\n    else{\n      let body = {\n        transStatus: this.status,\n        transType: this.type,\n        transactionId: transactionId,\n        status: status,\n        type: type,\n        clientName: clientName,\n        amount: amount\n      };\n      this.fileService.exportTransactions(body);\n    }\n  }\n\n  // Method for importing transactions in csv file\n  importTransactions(event){\n    let file = event.target.files[0];\n    let formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    this.fileService.importTransactions(formData).subscribe(data => {\n      this.toastr.success('File was uploaded.','Success!');\n      this.loadTransactions();\n    })\n  }\n\n  // Method for changing page number and loading appropriate transactions\n  pageChanged(event){\n    this.pageNumber = event;\n    this.loadTransactions();\n    this.config.currentPage = event;\n  }\n}\n","<div class=\"row mt-4 mx-4\" *ngIf=\"loaded\">\r\n\r\n  <div class=\"col-3\">\r\n    <div style=\"border: 2px solid black; width: 100%; height: 35vh;\">\r\n      <div class=\"col-12\" style=\"background-color:cornflowerblue; border-bottom: 2px solid black\">\r\n        <h3>Transactions</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-9\">\r\n    <div class=\"row pl-3 pr-2 mb-5\">\r\n      <div class=\"dropdown\">\r\n        <button class=\"btn btn-outline-dark dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" id=\"setStatus\">\r\n          Status\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <div *ngFor=\"let s of statuses\">\r\n            <label class=\"dropdown-item py-0\" style=\"cursor: pointer;\" (click)=\"setStatus(s)\">{{ s }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"dropdown mx-2\">\r\n        <button class=\"btn btn-outline-dark dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" id=\"setType\">\r\n          Type\r\n        </button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <div *ngFor=\"let t of types\">\r\n            <label class=\"dropdown-item py-0\" style=\"cursor: pointer;\" (click)=\"setType(t)\">{{ t }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"user\" class=\"row mx-auto\">\r\n        <h6 class=\"my-auto mx-3\">UserName: {{user.userName}}</h6>\r\n        <h6 class=\"my-auto\">Email: {{user.email}}</h6>\r\n      </div>\r\n      <div *ngIf=\"!user\" class=\"row mx-auto\">\r\n        <label>You can login.</label>\r\n      </div>\r\n\r\n    <label for=\"files\" class=\"btn btn-outline-dark ml-auto\">Import</label>\r\n    <input id=\"files\" type='file' style=\"display: none;\" (change)=\"importTransactions($event)\">\r\n    <label class=\"btn mx-2 btn-outline-dark\" data-toggle=\"modal\" data-target=\"#modalexport\">Export</label>\r\n  </div>\r\n    \r\n    <div class=\"modal fade\" id=\"modalexport\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Export data</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n              <div class=\"form-group required mx-auto\">\r\n                <div class=\"dropdown\">\r\n                    <label class=\"text-center\">Choose data to export</label><br>\r\n                    <input type=\"checkbox\" id=\"transactionId\" checked> TransactionId<br>\r\n                    <input type=\"checkbox\" id=\"status\" checked> Status<br>\r\n                    <input type=\"checkbox\" id=\"type\" checked> Type<br>\r\n                    <input type=\"checkbox\" id=\"clientName\" checked> Client Name<br>\r\n                    <input type=\"checkbox\" id=\"amount\" checked> Amount<br>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-row text-center\">\r\n                  <div class=\"form-group col-12\">\r\n                    <button type=\"submit\" class=\"btn btn-success\" (click)=\"exportTransactions()\">Export</button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"text-center\">\r\n      <table class=\"table-striped table-bordered col-12\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <td scope=\"col\">Id</td>\r\n            <td scope=\"col\">Status</td>\r\n            <td scope=\"col\">Type</td>\r\n            <td scope=\"col\">Client name</td>\r\n            <td scope=\"col\">Amount</td>\r\n            <td scope=\"col\">Action</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let t of transactions | paginate: config\">\r\n            <td scope=\"row\">{{ t.transactionId }}</td>\r\n            <td>{{ t?.status }}</td>\r\n            <td>{{ t?.type }}</td>\r\n            <td>{{ t?.clientName }}</td>\r\n            <td>{{ t?.amount }}</td>\r\n            <td>\r\n              <button (click)=\"transactionToChange(t.transactionId)\" data-toggle=\"modal\" data-target=\"#modalchangetransaction\" class=\"btn btn-sm btn-primary\" style=\"margin-right: 5px\">Edit</button>\r\n              <button (click)=\"deleteTransaction(t.transactionId)\" class=\"btn btn-sm btn-danger\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div>\r\n        <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\r\n      </div>\r\n      \r\n      <div class=\"modal fade\" id=\"modalchangetransaction\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Change status</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-group required\">\r\n                  <div class=\"dropdown\">\r\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" id=\"statusToEdit\">\r\n                      Status\r\n                    </button>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                      <div *ngFor=\"let s of statuses\">\r\n                        <a class=\"dropdown-item\" (click)=\"setStatusForChanging(s)\">{{ s }}</a>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-row text-center my-2\">\r\n                    <div class=\"form-group col-12\">\r\n                      <button type=\"submit\" class=\"btn btn-success\" (click)=\"changeStatus()\">Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { environment } from '../../environments/environment';\r\n\r\n// Service for working with authorization and authentication\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private authUrl = environment.apiUrl + 'auth/';\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient) {\r\n  }\r\n\r\n  // Model for validation data for registration\r\n  formModel = this.fb.group({\r\n      UserName: ['', Validators.required],\r\n      Email: ['', [Validators.email, Validators.required]],\r\n      Passwords: this.fb.group({\r\n        Password: ['', [Validators.required, Validators.minLength(6)]],\r\n        ConfirmPassword: ['', Validators.required]\r\n      }, { validator: this.comparePasswords })\r\n  });\r\n\r\n  // Http request for registrating user\r\n  register() {\r\n      var body = {\r\n        UserName: this.formModel.value.UserName,\r\n        Email: this.formModel.value.Email,\r\n        Password: this.formModel.value.Passwords.Password\r\n      };\r\n      return this.http.post(this.authUrl + 'register', body);\r\n  }\r\n  \r\n  // Http request for authenticating user\r\n  login(formData) {\r\n      return this.http.post(this.authUrl + 'login', formData);\r\n  }\r\n\r\n  // Method for comparing passwords\r\n  comparePasswords(fb: FormGroup) {\r\n      let confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n      if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\r\n        if (fb.get('Password').value != confirmPswrdCtrl.value)\r\n          confirmPswrdCtrl.setErrors({ passwordMismatch: true });\r\n        else\r\n          confirmPswrdCtrl.setErrors(null);\r\n      }\r\n  }\r\n\r\n  // Method for matching users role\r\n  roleMatch(allowedRoles): boolean {\r\n    var isMatch = false;\r\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('token').split('.')[1]));\r\n    var userRole = payLoad.role;\r\n    allowedRoles.forEach(element => {\r\n      if (userRole == element) {\r\n        isMatch = true;\r\n        return false;\r\n      }\r\n    });\r\n    return isMatch;\r\n  }\r\n \r\n  // Method for getting users profile\r\n  getUserProfile(){\r\n    return this.http.get(this.authUrl + 'profile');\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n// Service for working with files\r\n@Injectable()\r\nexport class FileService {\r\n\r\n    private fileUrl = environment.apiUrl + 'file/';\r\n\r\n    constructor( private http: HttpClient) {\r\n    }\r\n\r\n    // Method for exporting file with transactions\r\n    exportTransactions(body){\r\n        let url = this.fileUrl + `export/excel?transType=${body.transType}&transStatus=${body.transStatus}&TransactionId=${body.transactionId}&Status=${body.status}&Type=${body.type}&ClientName=${body.clientName}&Amount=${body.amount}`;\r\n        window.open(url);\r\n    }\r\n\r\n    // Method for importing file with transactions\r\n    importTransactions(csv){\r\n        return this.http.post(this.fileUrl + 'import/csv', csv);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n// Service for working with transactions\r\n@Injectable()\r\nexport class TransactionService {\r\n\r\n    private transactionUrl = environment.apiUrl + 'transaction/';\r\n\r\n    constructor( private http: HttpClient) {\r\n    }\r\n\r\n    // Method for deleting transaction\r\n    deleteTransaction(id: number){\r\n        return this.http.delete(this.transactionUrl + id);\r\n    }\r\n\r\n    // Method for editing transaction\r\n    editTransaction(transaction){\r\n        return this.http.put(this.transactionUrl, transaction);\r\n    }\r\n\r\n    // Method for getting all transaction statuses\r\n    getStatuses(){\r\n        return this.http.get(this.transactionUrl + `statuses`)\r\n    }\r\n\r\n    // Method for getting all transaction types\r\n    getTypes(){\r\n        return this.http.get(this.transactionUrl + `types`)\r\n    }\r\n\r\n    // Method for getting transactions\r\n    getTransactions(type: string, status: string, pageNumber: number){\r\n        return this.http.get(this.transactionUrl + `filtered?type=${type}&status=${status}&pageNumber=${pageNumber}&pageSize=10`);\r\n    }\r\n}","import { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    UserName: '',\n    Password: ''\n  }\n\n  constructor(private authService: AuthService, private router: Router, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null)\n      this.router.navigateByUrl('/home');\n  }\n\n  // Method for submitting authentication data\n  onSubmit(form: NgForm) {\n    this.authService.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.error == \"Username or password is incorrect\"){\n          this.toastr.error('Username or password is incorrect.', 'Authentication failed.');\n        }\n        else{\n          this.toastr.error('Something went wrong.', 'Authentication failed.');\n        }\n      }\n    );\n  }\n\n  // Method for showing or hidding password\n  show_hide_password(){\n    var input = document.getElementById('password-input');\n    var eye = document.getElementById('passeye');\n    if (input.getAttribute('type') == 'password') {\n      eye.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      eye.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n    return false;\n  }\n}","<img src=\"/assets/img/single_user.png\" class=\"mx-auto d-block\">\n<form #form='ngForm' class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  <div class=\"form-group\">\n    <label>UserName</label>\n    <input class=\"form-control\" #UserName=\"ngModel\" name=\"UserName\" [(ngModel)]=\"formModel.UserName\" required>\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <div class=\"password\">\n      <input type=\"password\" id=\"password-input\" class=\"form-control\" #Password=\"ngModel\" name=\"Password\" [(ngModel)]=\"formModel.Password\" required>\n      <a href=\"#\" id=\"passeye\" class=\"password-control\" (click)=\"show_hide_password()\"></a>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-8 offset-md-2\">\n      <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"form.invalid\">Login</button>\n    </div>\n  </div>\n</form>","import { AuthService } from '../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public authService: AuthService, private toastr: ToastrService) { }\n  pas1: string = \"password\";\n  pas2: string = \"confirmPassword\";\n\n  ngOnInit() {\n    this.authService.formModel.reset(); \n  }\n\n  // Method for submitting registration data\n  onSubmit() {\n    this.authService.register().subscribe(\n      (res: any) => {\n        if (res.succeeded) {\n          this.authService.formModel.reset();\n          this.toastr.success('Now you can sign in.','Registration passed succesfully!')\n        } else {\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Login is already taken.','Registration failed.');\n                break;\n              default:\n                this.toastr.error(element.description,'Registration failed.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n        this.toastr.error('Something went wrong.', 'Registration failed.');\n      }\n    );\n  }\n\n  // Method for showing or hidding password\n  show_hide_password(el){\n    if(el == \"password\"){\n      var input = document.getElementById('password-input');\n      var eye = document.getElementById('passeye');\n    }\n    else{\n      var input = document.getElementById('confirm-password-input');\n      var eye = document.getElementById('confirm-passeye');\n    }\n    if (input.getAttribute('type') == 'password') {\n      eye.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      eye.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n    return false;\n  }\n}","<form class=\"container\" [formGroup]=\"authService.formModel\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n    <div class=\"form-group required\">\n      <label>UserName</label>\n      <input class=\"form-control\" formControlName=\"UserName\">\n      <label class=\"text-danger\" *ngIf=\"authService.formModel.get('UserName').touched && authService.formModel.get('UserName').errors?.required\">\n            This field is mandatory.\n      </label>\n    </div>\n    <div class=\"form-group required\">\n      <label>Email</label>\n      <input class=\"form-control\" formControlName=\"Email\">\n      <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Email').touched && authService.formModel.get('Email').errors?.required\">\n            This field is mandatory.\n        </label>\n      <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Email').touched && authService.formModel.get('Email').errors?.email\">\n        Invalid email adress.\n      </label>\n    </div>\n    <div formGroupName=\"Passwords\">\n      <div class=\"form-group required\">\n        <label>Password</label>\n        <div class=\"password\">\n          <input type=\"password\" id=\"password-input\" class=\"form-control\" formControlName=\"Password\">\n          <a href=\"#\" id=\"passeye\" class=\"password-control\" (click)=\"show_hide_password(pas1)\"></a>\n        </div>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.Password').touched && authService.formModel.get('Passwords.Password').errors?.required\">\n            This field is mandatory.\n        </label>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.Password').touched && authService.formModel.get('Passwords.Password').errors?.minlength\">\n            Minimum 6 characters required.\n        </label>\n      </div>\n      <div class=\"form-group required\">\n        <label>Confirm password</label>\n        <div class=\"password\">\n          <input type=\"password\" id=\"confirm-password-input\" class=\"form-control\" formControlName=\"ConfirmPassword\">\n          <a href=\"#\" id=\"confirm-passeye\" class=\"password-control\" (click)=\"show_hide_password(pas2)\"></a>\n        </div>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.ConfirmPassword').touched && authService.formModel.get('Passwords.ConfirmPassword').errors?.required\">\n            This field is mandatory.\n        </label>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.ConfirmPassword').touched && authService.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n            Passwords missmatch.\n        </label>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8 offset-md-2\">\n        <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"!authService.formModel.valid\">Sign Up</button>\n      </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}","<div class=\"wrapper\">\n    <div class=\"wrapped-div\">\n      <div class=\"tab-header\"> \n        <h2 class=\"w-100 col-4 text-center\" routerLink='/user/login' routerLinkActive='active'>Sign In</h2>\n        <h2 class=\"w-100 col-4 text-center\" routerLink='/user/registration' routerLinkActive='active'>Sign Up</h2>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-10 offset-md-1\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:44392/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}